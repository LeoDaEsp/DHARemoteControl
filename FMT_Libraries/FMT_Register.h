// =====================================================================================
/**
 * @file					FMT_Register.h
 * @author					M.Forzieri, Formatech Engineering S.R.L.
 * @date					21/04/2021
 * @brief					Basic Data Register with bit/field access
 *
 * @version	Project:		Formatech C++ Core Library
 * @version	Language:		ANSI C++
 * -----------------------------------------------------------------------------------
 * @version	Revision summary:
 * @version	1.1.0001		[Initial Release][M.Forzieri][21/04/2021]
 */
// =====================================================================================


// =====================================================================================
//	DEFINES
// =====================================================================================

#ifndef FMTDEF_REGISTER_H
#define FMTDEF_REGISTER_H

// =====================================================================================
//	INCLUDES
// =====================================================================================


#ifndef FMTDEF_GLOBAL_H
#include "FMT_Global.h"
#endif

#ifndef FMTDEF_BITSET_H
#include "FMT_BitSet.h"
#endif

#ifndef FMTDEF_MUTEX_H
#include "FMT_Mutex.h"
#endif


// *************************************************************************************
// *************************************************************************************
//	Class CFMT_Register
// *************************************************************************************
// *************************************************************************************

class FMTDEF_LIB_DLLSPEC CFMT_Register : public CFMT_BitSet
{
	// =====================================================================================
	//	TYPES
	// =====================================================================================

protected:

public:

	// =====================================================================================
	//	VARIABLES
	// =====================================================================================

protected:

public:

    CFMT_Mutex          m_Mutex;
	t_FMT_Bool			m_bToBeWritten;
    t_FMT_Bool			m_bUpdated;


	// =====================================================================================
	// CONSTRUCTORS & DESTRUCTORS
	// =====================================================================================

public:

	CFMT_Register();
	virtual ~CFMT_Register();

	// =====================================================================================
	//	FUNCTIONS
	// =====================================================================================



protected:
public:

	void			Reset();
	void			Lock();
	void			Unlock();
    t_FMT_Uint64	GetField(t_FMT_Uint8 btStart, t_FMT_Uint8 btNB);
    void			SetField(t_FMT_Uint8 btStart, t_FMT_Uint8 btNB, t_FMT_Uint64 qwData);

};

#endif
